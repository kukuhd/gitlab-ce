{"severity":"INFO","time":"2023-06-08T01:56:44.825Z","correlation_id":"01H2CBGWHW4DYB3HHPJWX3PS7V","meta.caller_id":"graphql:searchNamespacesWhereUserCanCreateProjects","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"searchNamespacesWhereUserCanCreateProjects/gcSJelrf74QFKBjWTqwKvt_NqWrB7uFUOaMFA21RuUk=/1/OUV_TSHwtvCcdbJRrhb_YLwkbanm4OgZ4yPJfolDF_c=","duration_s":0.061088073009159416,"operation_name":"searchNamespacesWhereUserCanCreateProjects","operation_fingerprint":"searchNamespacesWhereUserCanCreateProjects/gcSJelrf74QFKBjWTqwKvt_NqWrB7uFUOaMFA21RuUk=","is_mutation":false,"variables":"{\"search\"=\u003e\"[FILTERED]\"}","query_string":"query searchNamespacesWhereUserCanCreateProjects($search: String) {\n  currentUser {\n    id\n    groups(permissionScope: CREATE_PROJECTS, search: $search) {\n      nodes {\n        id\n        fullPath\n        name\n        visibility\n        webUrl\n        __typename\n      }\n      __typename\n    }\n    namespace {\n      id\n      fullPath\n      __typename\n    }\n    __typename\n  }\n}\n","query_analysis.duration_s":0.0023262920149136335,"query_analysis.depth":4,"query_analysis.complexity":35,"query_analysis.used_fields":["UserCore.id","Group.id","Group.fullPath","Group.name","Group.visibility","Group.webUrl","Group.__typename","GroupConnection.nodes","GroupConnection.__typename","UserCore.groups","Namespace.id","Namespace.fullPath","Namespace.__typename","UserCore.namespace","UserCore.__typename","Query.currentUser"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T01:56:59.027Z","correlation_id":"01H2CBHAFPT4FXCGJ8C5B3FQ88","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=/3/X8XlCp72xA8ljZoYCI4lBgAMnI5TVEV0q8r6m8OukJE=","duration_s":0.0004334110126364976,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signature {\n              __typename\n              ... on GpgSignature {\n                gpgKeyPrimaryKeyid\n                verificationStatus\n                __typename\n              }\n              ... on X509Signature {\n                verificationStatus\n                x509Certificate {\n                  id\n                  subject\n                  subjectKeyIdentifier\n                  x509Issuer {\n                    id\n                    subject\n                    subjectKeyIdentifier\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SshSignature {\n                verificationStatus\n                keyFingerprintSha256\n                __typename\n              }\n            }\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.003956211992772296,"query_analysis.depth":10,"query_analysis.complexity":77,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","CommitSignature.__typename","GpgSignature.gpgKeyPrimaryKeyid","GpgSignature.verificationStatus","GpgSignature.__typename","X509Signature.verificationStatus","X509Certificate.id","X509Certificate.subject","X509Certificate.subjectKeyIdentifier","X509Issuer.id","X509Issuer.subject","X509Issuer.subjectKeyIdentifier","X509Issuer.__typename","X509Certificate.x509Issuer","X509Certificate.__typename","X509Signature.x509Certificate","X509Signature.__typename","SshSignature.verificationStatus","SshSignature.keyFingerprintSha256","SshSignature.__typename","Commit.signature","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T01:56:59.128Z","correlation_id":"01H2CBHAJV44TE3Z69GXGRBRTT","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/jc6Y0azvqkv9nIsR2FR9C_QZakNBFin2IM-6t0Y6d4A=","duration_s":0.0009245059918612242,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","query_analysis.duration_s":0.003279119002399966,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T01:56:59.130Z","correlation_id":"01H2CBHAJV44TE3Z69GXGRBRTT","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/BTai2WFCw0au7CsVijg27CZ5E46I1Lpj_Jsudhr-zxQ=","duration_s":0.0003112989943474531,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.003279119002399966,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:04:06.731Z","correlation_id":"01H2CBYC4WKHVSEN859Y29ATFE","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/jc6Y0azvqkv9nIsR2FR9C_QZakNBFin2IM-6t0Y6d4A=","duration_s":0.0004745479964185506,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","query_analysis.duration_s":0.003561889985576272,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:04:06.732Z","correlation_id":"01H2CBYC4WKHVSEN859Y29ATFE","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/BTai2WFCw0au7CsVijg27CZ5E46I1Lpj_Jsudhr-zxQ=","duration_s":0.0003465939953457564,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.003561889985576272,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:04:06.741Z","correlation_id":"01H2CBYC5G53TV493MVGQQABYC","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=/3/X8XlCp72xA8ljZoYCI4lBgAMnI5TVEV0q8r6m8OukJE=","duration_s":0.001734530000248924,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signature {\n              __typename\n              ... on GpgSignature {\n                gpgKeyPrimaryKeyid\n                verificationStatus\n                __typename\n              }\n              ... on X509Signature {\n                verificationStatus\n                x509Certificate {\n                  id\n                  subject\n                  subjectKeyIdentifier\n                  x509Issuer {\n                    id\n                    subject\n                    subjectKeyIdentifier\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SshSignature {\n                verificationStatus\n                keyFingerprintSha256\n                __typename\n              }\n            }\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.005169365991605446,"query_analysis.depth":10,"query_analysis.complexity":77,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","CommitSignature.__typename","GpgSignature.gpgKeyPrimaryKeyid","GpgSignature.verificationStatus","GpgSignature.__typename","X509Signature.verificationStatus","X509Certificate.id","X509Certificate.subject","X509Certificate.subjectKeyIdentifier","X509Issuer.id","X509Issuer.subject","X509Issuer.subjectKeyIdentifier","X509Issuer.__typename","X509Certificate.x509Issuer","X509Certificate.__typename","X509Signature.x509Certificate","X509Signature.__typename","SshSignature.verificationStatus","SshSignature.keyFingerprintSha256","SshSignature.__typename","Commit.signature","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:05:42.415Z","correlation_id":"01H2CC19K2CYND19ZDG7GSMCKS","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=/3/X8XlCp72xA8ljZoYCI4lBgAMnI5TVEV0q8r6m8OukJE=","duration_s":0.00046764599392190576,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signature {\n              __typename\n              ... on GpgSignature {\n                gpgKeyPrimaryKeyid\n                verificationStatus\n                __typename\n              }\n              ... on X509Signature {\n                verificationStatus\n                x509Certificate {\n                  id\n                  subject\n                  subjectKeyIdentifier\n                  x509Issuer {\n                    id\n                    subject\n                    subjectKeyIdentifier\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SshSignature {\n                verificationStatus\n                keyFingerprintSha256\n                __typename\n              }\n            }\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.003819891979219392,"query_analysis.depth":10,"query_analysis.complexity":77,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","CommitSignature.__typename","GpgSignature.gpgKeyPrimaryKeyid","GpgSignature.verificationStatus","GpgSignature.__typename","X509Signature.verificationStatus","X509Certificate.id","X509Certificate.subject","X509Certificate.subjectKeyIdentifier","X509Issuer.id","X509Issuer.subject","X509Issuer.subjectKeyIdentifier","X509Issuer.__typename","X509Certificate.x509Issuer","X509Certificate.__typename","X509Signature.x509Certificate","X509Signature.__typename","SshSignature.verificationStatus","SshSignature.keyFingerprintSha256","SshSignature.__typename","Commit.signature","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:05:42.430Z","correlation_id":"01H2CC19M112DFRZ888934TXPQ","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/jc6Y0azvqkv9nIsR2FR9C_QZakNBFin2IM-6t0Y6d4A=","duration_s":0.0004287579795345664,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","query_analysis.duration_s":0.0031892260012682527,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:05:42.431Z","correlation_id":"01H2CC19M112DFRZ888934TXPQ","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/BTai2WFCw0au7CsVijg27CZ5E46I1Lpj_Jsudhr-zxQ=","duration_s":0.0003030599909834564,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.0031892260012682527,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:05:45.212Z","correlation_id":"01H2CC1CAWA8868V8ZVN41AQ3E","meta.caller_id":"graphql:getBlobInfo","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getBlobInfo/zFoKR7AdtNY6m1hIi6tFUXlvKP4v3FnRNYKytBSLV1M=/4/ngfYN6HSHgNWGtTN_8qRdPo7Stu5qP_yz7Fa57i0Frk=","duration_s":0.0016147900023497641,"operation_name":"getBlobInfo","operation_fingerprint":"getBlobInfo/zFoKR7AdtNY6m1hIi6tFUXlvKP4v3FnRNYKytBSLV1M=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"filePath\"=\u003e\"README.md\", \"ref\"=\u003e\"main\", \"shouldFetchRawText\"=\u003etrue}","query_string":"query getBlobInfo($projectPath: ID!, $filePath: String!, $ref: String!, $shouldFetchRawText: Boolean!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      empty\n      blobs(paths: [$filePath], ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          id\n          webPath\n          name\n          size\n          rawSize\n          rawTextBlob @include(if: $shouldFetchRawText)\n          fileType\n          language\n          path\n          blamePath\n          editBlobPath\n          gitpodBlobUrl\n          ideEditPath\n          forkAndEditPath\n          ideForkAndEditPath\n          codeNavigationPath\n          projectBlobPathRoot\n          forkAndViewPath\n          environmentFormattedExternalUrl\n          environmentExternalUrlForRouteMap\n          canModifyBlob\n          canCurrentUserPushToBranch\n          archived\n          storedExternally\n          externalStorage\n          externalStorageUrl\n          rawPath\n          replacePath\n          pipelineEditorPath\n          simpleViewer {\n            fileType\n            tooLarge\n            type\n            renderError\n            __typename\n          }\n          richViewer {\n            fileType\n            tooLarge\n            type\n            renderError\n            __typename\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.004284777998691425,"query_analysis.depth":6,"query_analysis.complexity":111,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","Repository.empty","RepositoryBlobConnection.__typename","RepositoryBlob.__typename","RepositoryBlob.id","RepositoryBlob.webPath","RepositoryBlob.name","RepositoryBlob.size","RepositoryBlob.rawSize","RepositoryBlob.rawTextBlob","RepositoryBlob.fileType","RepositoryBlob.language","RepositoryBlob.path","RepositoryBlob.blamePath","RepositoryBlob.editBlobPath","RepositoryBlob.gitpodBlobUrl","RepositoryBlob.ideEditPath","RepositoryBlob.forkAndEditPath","RepositoryBlob.ideForkAndEditPath","RepositoryBlob.codeNavigationPath","RepositoryBlob.projectBlobPathRoot","RepositoryBlob.forkAndViewPath","RepositoryBlob.environmentFormattedExternalUrl","RepositoryBlob.environmentExternalUrlForRouteMap","RepositoryBlob.canModifyBlob","RepositoryBlob.canCurrentUserPushToBranch","RepositoryBlob.archived","RepositoryBlob.storedExternally","RepositoryBlob.externalStorage","RepositoryBlob.externalStorageUrl","RepositoryBlob.rawPath","RepositoryBlob.replacePath","RepositoryBlob.pipelineEditorPath","BlobViewer.fileType","BlobViewer.tooLarge","BlobViewer.type","BlobViewer.renderError","BlobViewer.__typename","RepositoryBlob.simpleViewer","RepositoryBlob.richViewer","RepositoryBlobConnection.nodes","Repository.blobs","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:05:45.817Z","correlation_id":"01H2CC1CXVEVD0AGZ63FNDFR5Q","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"115.85.71.130","meta.feature_category":"source_code_management","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=/3/SryvhkVg4gezWZnodTtL7WPfmSYS9yeT2SNA9FoJj64=","duration_s":0.0004054229939356446,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"new-update-all\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signature {\n              __typename\n              ... on GpgSignature {\n                gpgKeyPrimaryKeyid\n                verificationStatus\n                __typename\n              }\n              ... on X509Signature {\n                verificationStatus\n                x509Certificate {\n                  id\n                  subject\n                  subjectKeyIdentifier\n                  x509Issuer {\n                    id\n                    subject\n                    subjectKeyIdentifier\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SshSignature {\n                verificationStatus\n                keyFingerprintSha256\n                __typename\n              }\n            }\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.003908627026248723,"query_analysis.depth":10,"query_analysis.complexity":77,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","CommitSignature.__typename","GpgSignature.gpgKeyPrimaryKeyid","GpgSignature.verificationStatus","GpgSignature.__typename","X509Signature.verificationStatus","X509Certificate.id","X509Certificate.subject","X509Certificate.subjectKeyIdentifier","X509Issuer.id","X509Issuer.subject","X509Issuer.subjectKeyIdentifier","X509Issuer.__typename","X509Certificate.x509Issuer","X509Certificate.__typename","X509Signature.x509Certificate","X509Signature.__typename","SshSignature.verificationStatus","SshSignature.keyFingerprintSha256","SshSignature.__typename","Commit.signature","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:05:45.835Z","correlation_id":"01H2CC1CYC3XV1Y0PGW58CHKGA","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"source_code_management","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/FHW6Zfx1-lMS5m12KMEC3u9pyOi8xnG8N_x2nawhgvM=","duration_s":0.0004212970088701695,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"new-update-all\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.0006651259900536388,"query_analysis.depth":3,"query_analysis.complexity":8,"query_analysis.used_fields":["Project.id","Project.__typename","ProjectPermissions.__typename","ProjectPermissions.pushCode","ProjectPermissions.forkProject","ProjectPermissions.createMergeRequestIn","Project.userPermissions","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:05:45.836Z","correlation_id":"01H2CC1CYC3XV1Y0PGW58CHKGA","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"115.85.71.130","meta.feature_category":"source_code_management","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/jc6Y0azvqkv9nIsR2FR9C_QZakNBFin2IM-6t0Y6d4A=","duration_s":0.0003007390187121928,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","query_analysis.duration_s":0.0006651259900536388,"query_analysis.depth":3,"query_analysis.complexity":8,"query_analysis.used_fields":["Project.id","Project.__typename","ProjectPermissions.__typename","ProjectPermissions.pushCode","ProjectPermissions.forkProject","ProjectPermissions.createMergeRequestIn","Project.userPermissions","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:05:46.205Z","correlation_id":"01H2CC1D9WT9QC95YJXT5GNJRA","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"source_code_management","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/AUXelO9BNqHlL7r6pjoUZGTYMQZd3lIVrOTbhDU766M=","duration_s":0.0015448260237462819,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"new-update-all\", \"path\"=\u003e\"modules\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.004193307977402583,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:05:47.629Z","correlation_id":"01H2CC1EPMP2CTBW7PR1442PHZ","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"source_code_management","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/RsmX0FDCv_IzF6tIp1WWnG6cJTVfRTQFmdK9hdlONbA=","duration_s":0.00039754598401486874,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"new-update-all\", \"path\"=\u003e\"reducer\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.003332982014399022,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:06:02.592Z","correlation_id":"01H2CC1XA8CA0SDZ8MAT2JPC29","meta.caller_id":"graphql:getBlobInfo","meta.remote_ip":"115.85.71.130","meta.feature_category":"source_code_management","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getBlobInfo/zFoKR7AdtNY6m1hIi6tFUXlvKP4v3FnRNYKytBSLV1M=/4/4bB73LO5vhwoWRVImjzICR3_FutXOr8yM-yqusVfnh0=","duration_s":0.0003783029969781637,"operation_name":"getBlobInfo","operation_fingerprint":"getBlobInfo/zFoKR7AdtNY6m1hIi6tFUXlvKP4v3FnRNYKytBSLV1M=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"filePath\"=\u003e\".gitignore\", \"ref\"=\u003e\"new-update-all\", \"shouldFetchRawText\"=\u003etrue}","query_string":"query getBlobInfo($projectPath: ID!, $filePath: String!, $ref: String!, $shouldFetchRawText: Boolean!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      empty\n      blobs(paths: [$filePath], ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          id\n          webPath\n          name\n          size\n          rawSize\n          rawTextBlob @include(if: $shouldFetchRawText)\n          fileType\n          language\n          path\n          blamePath\n          editBlobPath\n          gitpodBlobUrl\n          ideEditPath\n          forkAndEditPath\n          ideForkAndEditPath\n          codeNavigationPath\n          projectBlobPathRoot\n          forkAndViewPath\n          environmentFormattedExternalUrl\n          environmentExternalUrlForRouteMap\n          canModifyBlob\n          canCurrentUserPushToBranch\n          archived\n          storedExternally\n          externalStorage\n          externalStorageUrl\n          rawPath\n          replacePath\n          pipelineEditorPath\n          simpleViewer {\n            fileType\n            tooLarge\n            type\n            renderError\n            __typename\n          }\n          richViewer {\n            fileType\n            tooLarge\n            type\n            renderError\n            __typename\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.003047791018616408,"query_analysis.depth":6,"query_analysis.complexity":111,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","Repository.empty","RepositoryBlobConnection.__typename","RepositoryBlob.__typename","RepositoryBlob.id","RepositoryBlob.webPath","RepositoryBlob.name","RepositoryBlob.size","RepositoryBlob.rawSize","RepositoryBlob.rawTextBlob","RepositoryBlob.fileType","RepositoryBlob.language","RepositoryBlob.path","RepositoryBlob.blamePath","RepositoryBlob.editBlobPath","RepositoryBlob.gitpodBlobUrl","RepositoryBlob.ideEditPath","RepositoryBlob.forkAndEditPath","RepositoryBlob.ideForkAndEditPath","RepositoryBlob.codeNavigationPath","RepositoryBlob.projectBlobPathRoot","RepositoryBlob.forkAndViewPath","RepositoryBlob.environmentFormattedExternalUrl","RepositoryBlob.environmentExternalUrlForRouteMap","RepositoryBlob.canModifyBlob","RepositoryBlob.canCurrentUserPushToBranch","RepositoryBlob.archived","RepositoryBlob.storedExternally","RepositoryBlob.externalStorage","RepositoryBlob.externalStorageUrl","RepositoryBlob.rawPath","RepositoryBlob.replacePath","RepositoryBlob.pipelineEditorPath","BlobViewer.fileType","BlobViewer.tooLarge","BlobViewer.type","BlobViewer.renderError","BlobViewer.__typename","RepositoryBlob.simpleViewer","RepositoryBlob.richViewer","RepositoryBlobConnection.nodes","Repository.blobs","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:06:05.978Z","correlation_id":"01H2CC20M1V0THENVS64NB6YTA","meta.caller_id":"graphql:getBlobInfo","meta.remote_ip":"115.85.71.130","meta.feature_category":"source_code_management","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getBlobInfo/zFoKR7AdtNY6m1hIi6tFUXlvKP4v3FnRNYKytBSLV1M=/4/oMUJicWUJhQiKwXnTE8-GauzZTRfqSFwDNaUQ5r5u4A=","duration_s":0.00039020500844344497,"operation_name":"getBlobInfo","operation_fingerprint":"getBlobInfo/zFoKR7AdtNY6m1hIi6tFUXlvKP4v3FnRNYKytBSLV1M=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"filePath\"=\u003e\"Dockerfile\", \"ref\"=\u003e\"new-update-all\", \"shouldFetchRawText\"=\u003etrue}","query_string":"query getBlobInfo($projectPath: ID!, $filePath: String!, $ref: String!, $shouldFetchRawText: Boolean!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      empty\n      blobs(paths: [$filePath], ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          id\n          webPath\n          name\n          size\n          rawSize\n          rawTextBlob @include(if: $shouldFetchRawText)\n          fileType\n          language\n          path\n          blamePath\n          editBlobPath\n          gitpodBlobUrl\n          ideEditPath\n          forkAndEditPath\n          ideForkAndEditPath\n          codeNavigationPath\n          projectBlobPathRoot\n          forkAndViewPath\n          environmentFormattedExternalUrl\n          environmentExternalUrlForRouteMap\n          canModifyBlob\n          canCurrentUserPushToBranch\n          archived\n          storedExternally\n          externalStorage\n          externalStorageUrl\n          rawPath\n          replacePath\n          pipelineEditorPath\n          simpleViewer {\n            fileType\n            tooLarge\n            type\n            renderError\n            __typename\n          }\n          richViewer {\n            fileType\n            tooLarge\n            type\n            renderError\n            __typename\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.0030310199945233762,"query_analysis.depth":6,"query_analysis.complexity":111,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","Repository.empty","RepositoryBlobConnection.__typename","RepositoryBlob.__typename","RepositoryBlob.id","RepositoryBlob.webPath","RepositoryBlob.name","RepositoryBlob.size","RepositoryBlob.rawSize","RepositoryBlob.rawTextBlob","RepositoryBlob.fileType","RepositoryBlob.language","RepositoryBlob.path","RepositoryBlob.blamePath","RepositoryBlob.editBlobPath","RepositoryBlob.gitpodBlobUrl","RepositoryBlob.ideEditPath","RepositoryBlob.forkAndEditPath","RepositoryBlob.ideForkAndEditPath","RepositoryBlob.codeNavigationPath","RepositoryBlob.projectBlobPathRoot","RepositoryBlob.forkAndViewPath","RepositoryBlob.environmentFormattedExternalUrl","RepositoryBlob.environmentExternalUrlForRouteMap","RepositoryBlob.canModifyBlob","RepositoryBlob.canCurrentUserPushToBranch","RepositoryBlob.archived","RepositoryBlob.storedExternally","RepositoryBlob.externalStorage","RepositoryBlob.externalStorageUrl","RepositoryBlob.rawPath","RepositoryBlob.replacePath","RepositoryBlob.pipelineEditorPath","BlobViewer.fileType","BlobViewer.tooLarge","BlobViewer.type","BlobViewer.renderError","BlobViewer.__typename","RepositoryBlob.simpleViewer","RepositoryBlob.richViewer","RepositoryBlobConnection.nodes","Repository.blobs","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:07:28.268Z","correlation_id":"01H2CC4GZGYVMWGPHH22A2VV2N","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/jc6Y0azvqkv9nIsR2FR9C_QZakNBFin2IM-6t0Y6d4A=","duration_s":0.00041909501305781305,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","query_analysis.duration_s":0.003096385975368321,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:07:28.269Z","correlation_id":"01H2CC4GZGYVMWGPHH22A2VV2N","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/BTai2WFCw0au7CsVijg27CZ5E46I1Lpj_Jsudhr-zxQ=","duration_s":0.0002884379937313497,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.003096385975368321,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:07:28.287Z","correlation_id":"01H2CC4H00M5E09NQ7F2S6MEPR","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=/3/X8XlCp72xA8ljZoYCI4lBgAMnI5TVEV0q8r6m8OukJE=","duration_s":0.0004522090021055192,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signature {\n              __typename\n              ... on GpgSignature {\n                gpgKeyPrimaryKeyid\n                verificationStatus\n                __typename\n              }\n              ... on X509Signature {\n                verificationStatus\n                x509Certificate {\n                  id\n                  subject\n                  subjectKeyIdentifier\n                  x509Issuer {\n                    id\n                    subject\n                    subjectKeyIdentifier\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SshSignature {\n                verificationStatus\n                keyFingerprintSha256\n                __typename\n              }\n            }\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.004975465999450535,"query_analysis.depth":10,"query_analysis.complexity":77,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","CommitSignature.__typename","GpgSignature.gpgKeyPrimaryKeyid","GpgSignature.verificationStatus","GpgSignature.__typename","X509Signature.verificationStatus","X509Certificate.id","X509Certificate.subject","X509Certificate.subjectKeyIdentifier","X509Issuer.id","X509Issuer.subject","X509Issuer.subjectKeyIdentifier","X509Issuer.__typename","X509Certificate.x509Issuer","X509Certificate.__typename","X509Signature.x509Certificate","X509Signature.__typename","SshSignature.verificationStatus","SshSignature.keyFingerprintSha256","SshSignature.__typename","Commit.signature","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:07:38.667Z","correlation_id":"01H2CC4V399NN7R63T8QC58TSH","meta.caller_id":"graphql:searchNamespacesWhereUserCanCreateProjects","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"searchNamespacesWhereUserCanCreateProjects/gcSJelrf74QFKBjWTqwKvt_NqWrB7uFUOaMFA21RuUk=/1/OUV_TSHwtvCcdbJRrhb_YLwkbanm4OgZ4yPJfolDF_c=","duration_s":0.04497898602858186,"operation_name":"searchNamespacesWhereUserCanCreateProjects","operation_fingerprint":"searchNamespacesWhereUserCanCreateProjects/gcSJelrf74QFKBjWTqwKvt_NqWrB7uFUOaMFA21RuUk=","is_mutation":false,"variables":"{\"search\"=\u003e\"[FILTERED]\"}","query_string":"query searchNamespacesWhereUserCanCreateProjects($search: String) {\n  currentUser {\n    id\n    groups(permissionScope: CREATE_PROJECTS, search: $search) {\n      nodes {\n        id\n        fullPath\n        name\n        visibility\n        webUrl\n        __typename\n      }\n      __typename\n    }\n    namespace {\n      id\n      fullPath\n      __typename\n    }\n    __typename\n  }\n}\n","query_analysis.duration_s":0.0014388860145118088,"query_analysis.depth":4,"query_analysis.complexity":35,"query_analysis.used_fields":["UserCore.id","Group.id","Group.fullPath","Group.name","Group.visibility","Group.webUrl","Group.__typename","GroupConnection.nodes","GroupConnection.__typename","UserCore.groups","Namespace.id","Namespace.fullPath","Namespace.__typename","UserCore.namespace","UserCore.__typename","Query.currentUser"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:07:44.956Z","correlation_id":"01H2CC5190XQSGWC6ZFXNEZB89","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/GIeNMpYa1_HOGSR8QqsLMkWAZfZssmuCWU76SLgrVcI=","duration_s":0.0004359839949756861,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitbe-prod\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","query_analysis.duration_s":0.0031510570261161774,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:07:44.957Z","correlation_id":"01H2CC5190XQSGWC6ZFXNEZB89","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/vux0SfqCo-PbeE5sYJlFi6_JUwaWWyHO6jx-uscVMUg=","duration_s":0.000317567988531664,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitbe-prod\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.0031510570261161774,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:07:44.967Z","correlation_id":"01H2CC518T2SB1D544SCSDQS22","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=/3/0RxTPh7Sbjl840Ln2L83P8HDxyqVgFRXPzn0PVkQSmw=","duration_s":0.0003674380131997168,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitbe-prod\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signature {\n              __typename\n              ... on GpgSignature {\n                gpgKeyPrimaryKeyid\n                verificationStatus\n                __typename\n              }\n              ... on X509Signature {\n                verificationStatus\n                x509Certificate {\n                  id\n                  subject\n                  subjectKeyIdentifier\n                  x509Issuer {\n                    id\n                    subject\n                    subjectKeyIdentifier\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SshSignature {\n                verificationStatus\n                keyFingerprintSha256\n                __typename\n              }\n            }\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.003755324985831976,"query_analysis.depth":10,"query_analysis.complexity":77,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","CommitSignature.__typename","GpgSignature.gpgKeyPrimaryKeyid","GpgSignature.verificationStatus","GpgSignature.__typename","X509Signature.verificationStatus","X509Certificate.id","X509Certificate.subject","X509Certificate.subjectKeyIdentifier","X509Issuer.id","X509Issuer.subject","X509Issuer.subjectKeyIdentifier","X509Issuer.__typename","X509Certificate.x509Issuer","X509Certificate.__typename","X509Signature.x509Certificate","X509Signature.__typename","SshSignature.verificationStatus","SshSignature.keyFingerprintSha256","SshSignature.__typename","Commit.signature","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:22:41.623Z","correlation_id":"01H2CD0CXXP0HRHVAH0433YG74","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=/3/0RxTPh7Sbjl840Ln2L83P8HDxyqVgFRXPzn0PVkQSmw=","duration_s":0.00042016900260932744,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitbe-prod\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signature {\n              __typename\n              ... on GpgSignature {\n                gpgKeyPrimaryKeyid\n                verificationStatus\n                __typename\n              }\n              ... on X509Signature {\n                verificationStatus\n                x509Certificate {\n                  id\n                  subject\n                  subjectKeyIdentifier\n                  x509Issuer {\n                    id\n                    subject\n                    subjectKeyIdentifier\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SshSignature {\n                verificationStatus\n                keyFingerprintSha256\n                __typename\n              }\n            }\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.004076078999787569,"query_analysis.depth":10,"query_analysis.complexity":77,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","CommitSignature.__typename","GpgSignature.gpgKeyPrimaryKeyid","GpgSignature.verificationStatus","GpgSignature.__typename","X509Signature.verificationStatus","X509Certificate.id","X509Certificate.subject","X509Certificate.subjectKeyIdentifier","X509Issuer.id","X509Issuer.subject","X509Issuer.subjectKeyIdentifier","X509Issuer.__typename","X509Certificate.x509Issuer","X509Certificate.__typename","X509Signature.x509Certificate","X509Signature.__typename","SshSignature.verificationStatus","SshSignature.keyFingerprintSha256","SshSignature.__typename","Commit.signature","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:22:41.706Z","correlation_id":"01H2CD0CZKN2MAMMCJR24EB25H","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/GIeNMpYa1_HOGSR8QqsLMkWAZfZssmuCWU76SLgrVcI=","duration_s":0.0004125589912291616,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitbe-prod\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","query_analysis.duration_s":0.00313141499646008,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:22:41.707Z","correlation_id":"01H2CD0CZKN2MAMMCJR24EB25H","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/vux0SfqCo-PbeE5sYJlFi6_JUwaWWyHO6jx-uscVMUg=","duration_s":0.0003107349912170321,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitbe-prod\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.00313141499646008,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:30:49.747Z","correlation_id":"01H2CDF9KQV1EYVHD072SKSZWA","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=/3/0RxTPh7Sbjl840Ln2L83P8HDxyqVgFRXPzn0PVkQSmw=","duration_s":0.0004613210039678961,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitbe-prod\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signature {\n              __typename\n              ... on GpgSignature {\n                gpgKeyPrimaryKeyid\n                verificationStatus\n                __typename\n              }\n              ... on X509Signature {\n                verificationStatus\n                x509Certificate {\n                  id\n                  subject\n                  subjectKeyIdentifier\n                  x509Issuer {\n                    id\n                    subject\n                    subjectKeyIdentifier\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SshSignature {\n                verificationStatus\n                keyFingerprintSha256\n                __typename\n              }\n            }\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.0042075660021509975,"query_analysis.depth":10,"query_analysis.complexity":77,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","CommitSignature.__typename","GpgSignature.gpgKeyPrimaryKeyid","GpgSignature.verificationStatus","GpgSignature.__typename","X509Signature.verificationStatus","X509Certificate.id","X509Certificate.subject","X509Certificate.subjectKeyIdentifier","X509Issuer.id","X509Issuer.subject","X509Issuer.subjectKeyIdentifier","X509Issuer.__typename","X509Certificate.x509Issuer","X509Certificate.__typename","X509Signature.x509Certificate","X509Signature.__typename","SshSignature.verificationStatus","SshSignature.keyFingerprintSha256","SshSignature.__typename","Commit.signature","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:30:49.792Z","correlation_id":"01H2CDF9MMJAG3CRR939HW5953","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/GIeNMpYa1_HOGSR8QqsLMkWAZfZssmuCWU76SLgrVcI=","duration_s":0.00043050397653132677,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitbe-prod\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","query_analysis.duration_s":0.003226149012334645,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:30:49.793Z","correlation_id":"01H2CDF9MMJAG3CRR939HW5953","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/vux0SfqCo-PbeE5sYJlFi6_JUwaWWyHO6jx-uscVMUg=","duration_s":0.00031366400071419775,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitbe-prod\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.003226149012334645,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:36:09.186Z","correlation_id":"01H2CDS1H17CBYGDPMRBEHQ464","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=/3/X8XlCp72xA8ljZoYCI4lBgAMnI5TVEV0q8r6m8OukJE=","duration_s":0.0006772879860363901,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signature {\n              __typename\n              ... on GpgSignature {\n                gpgKeyPrimaryKeyid\n                verificationStatus\n                __typename\n              }\n              ... on X509Signature {\n                verificationStatus\n                x509Certificate {\n                  id\n                  subject\n                  subjectKeyIdentifier\n                  x509Issuer {\n                    id\n                    subject\n                    subjectKeyIdentifier\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SshSignature {\n                verificationStatus\n                keyFingerprintSha256\n                __typename\n              }\n            }\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.011239133978961036,"query_analysis.depth":10,"query_analysis.complexity":77,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","CommitSignature.__typename","GpgSignature.gpgKeyPrimaryKeyid","GpgSignature.verificationStatus","GpgSignature.__typename","X509Signature.verificationStatus","X509Certificate.id","X509Certificate.subject","X509Certificate.subjectKeyIdentifier","X509Issuer.id","X509Issuer.subject","X509Issuer.subjectKeyIdentifier","X509Issuer.__typename","X509Certificate.x509Issuer","X509Certificate.__typename","X509Signature.x509Certificate","X509Signature.__typename","SshSignature.verificationStatus","SshSignature.keyFingerprintSha256","SshSignature.__typename","Commit.signature","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:36:09.201Z","correlation_id":"01H2CDS1HN2VBBD88EY7TAAQWJ","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/jc6Y0azvqkv9nIsR2FR9C_QZakNBFin2IM-6t0Y6d4A=","duration_s":0.00042455599759705365,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","query_analysis.duration_s":0.003325519006466493,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:36:09.202Z","correlation_id":"01H2CDS1HN2VBBD88EY7TAAQWJ","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/BTai2WFCw0au7CsVijg27CZ5E46I1Lpj_Jsudhr-zxQ=","duration_s":0.0003113429993391037,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.003325519006466493,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:38:33.149Z","correlation_id":"01H2CDXE588DTH33N7470A88JA","meta.caller_id":"graphql:ProjectBoard","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"ProjectBoard/7275sFBUyA8hxlxIQdJwxTGHEtDWeUZSgJspaf8-bdE=/2/zPE8pOB3Bbq1uEXZOQZzC7EFXZ0W_dHwtU3Ij3uqghk=","duration_s":0.0004284410097170621,"operation_name":"ProjectBoard","operation_fingerprint":"ProjectBoard/7275sFBUyA8hxlxIQdJwxTGHEtDWeUZSgJspaf8-bdE=","is_mutation":false,"variables":"{\"fullPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"boardId\"=\u003e\"gid://gitlab/Board/1\"}","query_string":"query ProjectBoard($fullPath: ID!, $boardId: BoardID!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    board(id: $boardId) {\n      ...BoardScopeFragment\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment BoardScopeFragment on Board {\n  id\n  name\n  hideBacklogList\n  hideClosedList\n  __typename\n}\n","query_analysis.duration_s":0.0010162350081373006,"query_analysis.depth":3,"query_analysis.complexity":9,"query_analysis.used_fields":["Project.id","Board.id","Board.name","Board.hideBacklogList","Board.hideClosedList","Board.__typename","Project.board","Project.__typename","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:38:33.338Z","correlation_id":"01H2CDXEAX7VF2D1J7YJ378406","meta.caller_id":"graphql:BoardLists","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"BoardLists/nmOtE6fwbVuakEfPV1d7G0UsYI5D8-WPXH6lo1HFLgE=/5/M-AiZDeBZUwCtU2Efr4RoJXiVhRmjELx0h6TctMldTc=","duration_s":0.0005039010138716549,"operation_name":"BoardLists","operation_fingerprint":"BoardLists/nmOtE6fwbVuakEfPV1d7G0UsYI5D8-WPXH6lo1HFLgE=","is_mutation":false,"variables":"{\"isGroup\"=\u003efalse, \"isProject\"=\u003etrue, \"fullPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"boardId\"=\u003e\"gid://gitlab/Board/1\", \"filters\"=\u003e{\"not\"=\u003e{}}}","query_string":"query BoardLists($fullPath: ID!, $boardId: BoardID!, $listId: ListID, $filters: BoardIssueInput, $isGroup: Boolean = false, $isProject: Boolean = false) {\n  group(fullPath: $fullPath) @include(if: $isGroup) {\n    id\n    board(id: $boardId) {\n      id\n      hideBacklogList\n      lists(issueFilters: $filters, id: $listId) {\n        nodes {\n          ...BoardListFragment\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  project(fullPath: $fullPath) @include(if: $isProject) {\n    id\n    board(id: $boardId) {\n      id\n      hideBacklogList\n      lists(issueFilters: $filters, id: $listId) {\n        nodes {\n          ...BoardListFragment\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment BoardListFragment on BoardList {\n  ...BoardListShared\n  __typename\n}\n\nfragment BoardListShared on BoardList {\n  id\n  title\n  position\n  listType\n  collapsed\n  label {\n    id\n    title\n    color\n    textColor\n    description\n    descriptionHtml\n    __typename\n  }\n  __typename\n}\n","query_analysis.duration_s":0.004172197979642078,"query_analysis.depth":6,"query_analysis.complexity":49,"query_analysis.used_fields":["Group.id","Board.id","Board.hideBacklogList","BoardList.id","BoardList.title","BoardList.position","BoardList.listType","BoardList.collapsed","Label.id","Label.title","Label.color","Label.textColor","Label.description","Label.descriptionHtml","Label.__typename","BoardList.label","BoardList.__typename","BoardListConnection.nodes","BoardListConnection.__typename","Board.lists","Board.__typename","Group.board","Group.__typename","Query.group","Project.id","Project.board","Project.__typename","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:38:33.578Z","correlation_id":"01H2CDXEJ5XGJG3SXPH7GB6NZZ","meta.caller_id":"graphql:BoardListsEE","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"BoardListsEE/yDLviiGNcPiRWj0WK6qzkpjSg17MuPZqq-YvcuwjNzU=/7/5ZAxZWV1osbsgZoFjdlMx2YxEm5bT1KhysNfhnp8Msc=","duration_s":0.0005287000094540417,"operation_name":"BoardListsEE","operation_fingerprint":"BoardListsEE/yDLviiGNcPiRWj0WK6qzkpjSg17MuPZqq-YvcuwjNzU=","is_mutation":false,"variables":"{\"isGroup\"=\u003efalse, \"isProject\"=\u003etrue, \"fullPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"boardId\"=\u003e\"gid://gitlab/Board/1\", \"id\"=\u003e\"gid://gitlab/List/2\", \"filters\"=\u003e{\"not\"=\u003e{}}, \"first\"=\u003e10}","query_string":"query BoardListsEE($fullPath: ID!, $boardId: BoardID!, $id: ListID, $filters: BoardIssueInput, $isGroup: Boolean = false, $isProject: Boolean = false, $after: String, $first: Int) {\n  group(fullPath: $fullPath) @include(if: $isGroup) {\n    id\n    board(id: $boardId) {\n      id\n      lists(id: $id, issueFilters: $filters) {\n        nodes {\n          id\n          listType\n          issues(first: $first, filters: $filters, after: $after) {\n            nodes {\n              ...Issue\n              __typename\n            }\n            pageInfo {\n              endCursor\n              hasNextPage\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  project(fullPath: $fullPath) @include(if: $isProject) {\n    id\n    board(id: $boardId) {\n      id\n      lists(id: $id, issueFilters: $filters) {\n        nodes {\n          id\n          listType\n          issues(first: $first, filters: $filters, after: $after) {\n            nodes {\n              ...Issue\n              __typename\n            }\n            pageInfo {\n              endCursor\n              hasNextPage\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment Issue on Issue {\n  id\n  ...IssueNode\n  __typename\n}\n\nfragment IssueNode on Issue {\n  id\n  iid\n  title\n  referencePath: reference(full: true)\n  dueDate\n  timeEstimate\n  totalTimeSpent\n  humanTimeEstimate\n  humanTotalTimeSpent\n  emailsDisabled\n  confidential\n  hidden\n  webUrl\n  relativePosition\n  type\n  severity\n  milestone {\n    ...MilestoneFragment\n    __typename\n  }\n  assignees {\n    nodes {\n      ...User\n      __typename\n    }\n    __typename\n  }\n  labels {\n    nodes {\n      id\n      title\n      color\n      description\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment MilestoneFragment on Milestone {\n  expired\n  id\n  state\n  title\n  __typename\n}\n\nfragment User on User {\n  id\n  avatarUrl\n  name\n  username\n  webUrl\n  __typename\n}\n","query_analysis.duration_s":0.008811938983853906,"query_analysis.depth":9,"query_analysis.complexity":132,"query_analysis.used_fields":["Group.id","Board.id","BoardList.id","BoardList.listType","Issue.id","Issue.iid","Issue.title","Issue.reference","Issue.dueDate","Issue.timeEstimate","Issue.totalTimeSpent","Issue.humanTimeEstimate","Issue.humanTotalTimeSpent","Issue.emailsDisabled","Issue.confidential","Issue.hidden","Issue.webUrl","Issue.relativePosition","Issue.type","Issue.severity","Milestone.expired","Milestone.id","Milestone.state","Milestone.title","Milestone.__typename","Issue.milestone","User.id","User.avatarUrl","User.name","User.username","User.webUrl","User.__typename","UserCore.__typename","UserCoreConnection.nodes","UserCoreConnection.__typename","Issue.assignees","Label.id","Label.title","Label.color","Label.description","Label.__typename","LabelConnection.nodes","LabelConnection.__typename","Issue.labels","Issue.__typename","IssueConnection.nodes","PageInfo.endCursor","PageInfo.hasNextPage","PageInfo.__typename","IssueConnection.pageInfo","IssueConnection.__typename","BoardList.issues","BoardList.__typename","BoardListConnection.nodes","BoardListConnection.__typename","Board.lists","Board.__typename","Group.board","Group.__typename","Query.group","Project.id","Project.board","Project.__typename","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:38:33.596Z","correlation_id":"01H2CDXEJMGVRHMZ714M2KPJH1","meta.caller_id":"graphql:BoardListCount","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"BoardListCount/RM8Rbdgcfd8baR2fEknBq_EN0o76KZjHUcywKRoP4BA=/2/eTNeMqjAFZto073BkZ-fSUSObauFk_NJQiqloLp13F8=","duration_s":0.0013224610011093318,"operation_name":"BoardListCount","operation_fingerprint":"BoardListCount/RM8Rbdgcfd8baR2fEknBq_EN0o76KZjHUcywKRoP4BA=","is_mutation":false,"variables":"{\"id\"=\u003e\"gid://gitlab/List/1\", \"filters\"=\u003e{\"not\"=\u003e{}}}","query_string":"query BoardListCount($id: ListID!, $filters: BoardIssueInput) {\n  boardList(id: $id, issueFilters: $filters) {\n    id\n    issuesCount\n    __typename\n  }\n}\n","query_analysis.duration_s":0.0012973909906577319,"query_analysis.depth":2,"query_analysis.complexity":4,"query_analysis.used_fields":["BoardList.id","BoardList.issuesCount","BoardList.__typename","Query.boardList"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:38:33.600Z","correlation_id":"01H2CDXEJVNZY7ME6TJX5F2X3D","meta.caller_id":"graphql:BoardListsEE","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"BoardListsEE/yDLviiGNcPiRWj0WK6qzkpjSg17MuPZqq-YvcuwjNzU=/7/ak71jYg5Sc0VhDf_EIDmXWjG1zkKKvVQoagsp38CVx0=","duration_s":0.0005107970209792256,"operation_name":"BoardListsEE","operation_fingerprint":"BoardListsEE/yDLviiGNcPiRWj0WK6qzkpjSg17MuPZqq-YvcuwjNzU=","is_mutation":false,"variables":"{\"isGroup\"=\u003efalse, \"isProject\"=\u003etrue, \"fullPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"boardId\"=\u003e\"gid://gitlab/Board/1\", \"id\"=\u003e\"gid://gitlab/List/1\", \"filters\"=\u003e{\"not\"=\u003e{}}, \"first\"=\u003e10}","query_string":"query BoardListsEE($fullPath: ID!, $boardId: BoardID!, $id: ListID, $filters: BoardIssueInput, $isGroup: Boolean = false, $isProject: Boolean = false, $after: String, $first: Int) {\n  group(fullPath: $fullPath) @include(if: $isGroup) {\n    id\n    board(id: $boardId) {\n      id\n      lists(id: $id, issueFilters: $filters) {\n        nodes {\n          id\n          listType\n          issues(first: $first, filters: $filters, after: $after) {\n            nodes {\n              ...Issue\n              __typename\n            }\n            pageInfo {\n              endCursor\n              hasNextPage\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  project(fullPath: $fullPath) @include(if: $isProject) {\n    id\n    board(id: $boardId) {\n      id\n      lists(id: $id, issueFilters: $filters) {\n        nodes {\n          id\n          listType\n          issues(first: $first, filters: $filters, after: $after) {\n            nodes {\n              ...Issue\n              __typename\n            }\n            pageInfo {\n              endCursor\n              hasNextPage\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment Issue on Issue {\n  id\n  ...IssueNode\n  __typename\n}\n\nfragment IssueNode on Issue {\n  id\n  iid\n  title\n  referencePath: reference(full: true)\n  dueDate\n  timeEstimate\n  totalTimeSpent\n  humanTimeEstimate\n  humanTotalTimeSpent\n  emailsDisabled\n  confidential\n  hidden\n  webUrl\n  relativePosition\n  type\n  severity\n  milestone {\n    ...MilestoneFragment\n    __typename\n  }\n  assignees {\n    nodes {\n      ...User\n      __typename\n    }\n    __typename\n  }\n  labels {\n    nodes {\n      id\n      title\n      color\n      description\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment MilestoneFragment on Milestone {\n  expired\n  id\n  state\n  title\n  __typename\n}\n\nfragment User on User {\n  id\n  avatarUrl\n  name\n  username\n  webUrl\n  __typename\n}\n","query_analysis.duration_s":0.008305363997351378,"query_analysis.depth":9,"query_analysis.complexity":132,"query_analysis.used_fields":["Group.id","Board.id","BoardList.id","BoardList.listType","Issue.id","Issue.iid","Issue.title","Issue.reference","Issue.dueDate","Issue.timeEstimate","Issue.totalTimeSpent","Issue.humanTimeEstimate","Issue.humanTotalTimeSpent","Issue.emailsDisabled","Issue.confidential","Issue.hidden","Issue.webUrl","Issue.relativePosition","Issue.type","Issue.severity","Milestone.expired","Milestone.id","Milestone.state","Milestone.title","Milestone.__typename","Issue.milestone","User.id","User.avatarUrl","User.name","User.username","User.webUrl","User.__typename","UserCore.__typename","UserCoreConnection.nodes","UserCoreConnection.__typename","Issue.assignees","Label.id","Label.title","Label.color","Label.description","Label.__typename","LabelConnection.nodes","LabelConnection.__typename","Issue.labels","Issue.__typename","IssueConnection.nodes","PageInfo.endCursor","PageInfo.hasNextPage","PageInfo.__typename","IssueConnection.pageInfo","IssueConnection.__typename","BoardList.issues","BoardList.__typename","BoardListConnection.nodes","BoardListConnection.__typename","Board.lists","Board.__typename","Group.board","Group.__typename","Query.group","Project.id","Project.board","Project.__typename","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:38:33.603Z","correlation_id":"01H2CDXEJR241KJ1H7Y79E8RE2","meta.caller_id":"graphql:BoardListCount","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"BoardListCount/RM8Rbdgcfd8baR2fEknBq_EN0o76KZjHUcywKRoP4BA=/2/jSGrM2bEL_SrntYTvh4dJ5otZctmrfKyLwkxQ403s3I=","duration_s":0.0031379800057038665,"operation_name":"BoardListCount","operation_fingerprint":"BoardListCount/RM8Rbdgcfd8baR2fEknBq_EN0o76KZjHUcywKRoP4BA=","is_mutation":false,"variables":"{\"id\"=\u003e\"gid://gitlab/List/2\", \"filters\"=\u003e{\"not\"=\u003e{}}}","query_string":"query BoardListCount($id: ListID!, $filters: BoardIssueInput) {\n  boardList(id: $id, issueFilters: $filters) {\n    id\n    issuesCount\n    __typename\n  }\n}\n","query_analysis.duration_s":0.002729911997448653,"query_analysis.depth":2,"query_analysis.complexity":4,"query_analysis.used_fields":["BoardList.id","BoardList.issuesCount","BoardList.__typename","Query.boardList"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:42:05.230Z","correlation_id":"01H2CE3X8R1XMFYF2XHFT30T8V","meta.caller_id":"graphql:ProjectBoard","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"ProjectBoard/7275sFBUyA8hxlxIQdJwxTGHEtDWeUZSgJspaf8-bdE=/2/zPE8pOB3Bbq1uEXZOQZzC7EFXZ0W_dHwtU3Ij3uqghk=","duration_s":0.00037864799378439784,"operation_name":"ProjectBoard","operation_fingerprint":"ProjectBoard/7275sFBUyA8hxlxIQdJwxTGHEtDWeUZSgJspaf8-bdE=","is_mutation":false,"variables":"{\"fullPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"boardId\"=\u003e\"gid://gitlab/Board/1\"}","query_string":"query ProjectBoard($fullPath: ID!, $boardId: BoardID!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    board(id: $boardId) {\n      ...BoardScopeFragment\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment BoardScopeFragment on Board {\n  id\n  name\n  hideBacklogList\n  hideClosedList\n  __typename\n}\n","query_analysis.duration_s":0.0009909479995258152,"query_analysis.depth":3,"query_analysis.complexity":9,"query_analysis.used_fields":["Project.id","Board.id","Board.name","Board.hideBacklogList","Board.hideClosedList","Board.__typename","Project.board","Project.__typename","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:42:05.411Z","correlation_id":"01H2CE3XEA17W3ZZDJA1NH17N7","meta.caller_id":"graphql:BoardLists","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"BoardLists/nmOtE6fwbVuakEfPV1d7G0UsYI5D8-WPXH6lo1HFLgE=/5/M-AiZDeBZUwCtU2Efr4RoJXiVhRmjELx0h6TctMldTc=","duration_s":0.0005187049973756075,"operation_name":"BoardLists","operation_fingerprint":"BoardLists/nmOtE6fwbVuakEfPV1d7G0UsYI5D8-WPXH6lo1HFLgE=","is_mutation":false,"variables":"{\"isGroup\"=\u003efalse, \"isProject\"=\u003etrue, \"fullPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"boardId\"=\u003e\"gid://gitlab/Board/1\", \"filters\"=\u003e{\"not\"=\u003e{}}}","query_string":"query BoardLists($fullPath: ID!, $boardId: BoardID!, $listId: ListID, $filters: BoardIssueInput, $isGroup: Boolean = false, $isProject: Boolean = false) {\n  group(fullPath: $fullPath) @include(if: $isGroup) {\n    id\n    board(id: $boardId) {\n      id\n      hideBacklogList\n      lists(issueFilters: $filters, id: $listId) {\n        nodes {\n          ...BoardListFragment\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  project(fullPath: $fullPath) @include(if: $isProject) {\n    id\n    board(id: $boardId) {\n      id\n      hideBacklogList\n      lists(issueFilters: $filters, id: $listId) {\n        nodes {\n          ...BoardListFragment\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment BoardListFragment on BoardList {\n  ...BoardListShared\n  __typename\n}\n\nfragment BoardListShared on BoardList {\n  id\n  title\n  position\n  listType\n  collapsed\n  label {\n    id\n    title\n    color\n    textColor\n    description\n    descriptionHtml\n    __typename\n  }\n  __typename\n}\n","query_analysis.duration_s":0.003688627009978518,"query_analysis.depth":6,"query_analysis.complexity":49,"query_analysis.used_fields":["Group.id","Board.id","Board.hideBacklogList","BoardList.id","BoardList.title","BoardList.position","BoardList.listType","BoardList.collapsed","Label.id","Label.title","Label.color","Label.textColor","Label.description","Label.descriptionHtml","Label.__typename","BoardList.label","BoardList.__typename","BoardListConnection.nodes","BoardListConnection.__typename","Board.lists","Board.__typename","Group.board","Group.__typename","Query.group","Project.id","Project.board","Project.__typename","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:42:05.652Z","correlation_id":"01H2CE3XNFXVN6M682ZN9YTRT1","meta.caller_id":"graphql:ProjectBoard","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"ProjectBoard/7275sFBUyA8hxlxIQdJwxTGHEtDWeUZSgJspaf8-bdE=/2/zPE8pOB3Bbq1uEXZOQZzC7EFXZ0W_dHwtU3Ij3uqghk=","duration_s":0.0003896910056937486,"operation_name":"ProjectBoard","operation_fingerprint":"ProjectBoard/7275sFBUyA8hxlxIQdJwxTGHEtDWeUZSgJspaf8-bdE=","is_mutation":false,"variables":"{\"fullPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"boardId\"=\u003e\"gid://gitlab/Board/1\"}","query_string":"query ProjectBoard($fullPath: ID!, $boardId: BoardID!) {\n  workspace: project(fullPath: $fullPath) {\n    id\n    board(id: $boardId) {\n      ...BoardScopeFragment\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment BoardScopeFragment on Board {\n  id\n  name\n  hideBacklogList\n  hideClosedList\n  __typename\n}\n","query_analysis.duration_s":0.0011342509824316949,"query_analysis.depth":3,"query_analysis.complexity":9,"query_analysis.used_fields":["Project.id","Board.id","Board.name","Board.hideBacklogList","Board.hideClosedList","Board.__typename","Project.board","Project.__typename","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:42:05.792Z","correlation_id":"01H2CE3XT8WF2PWD6A5ZJJJT75","meta.caller_id":"graphql:BoardLists","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"BoardLists/nmOtE6fwbVuakEfPV1d7G0UsYI5D8-WPXH6lo1HFLgE=/5/M-AiZDeBZUwCtU2Efr4RoJXiVhRmjELx0h6TctMldTc=","duration_s":0.0003895389963872731,"operation_name":"BoardLists","operation_fingerprint":"BoardLists/nmOtE6fwbVuakEfPV1d7G0UsYI5D8-WPXH6lo1HFLgE=","is_mutation":false,"variables":"{\"isGroup\"=\u003efalse, \"isProject\"=\u003etrue, \"fullPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"boardId\"=\u003e\"gid://gitlab/Board/1\", \"filters\"=\u003e{\"not\"=\u003e{}}}","query_string":"query BoardLists($fullPath: ID!, $boardId: BoardID!, $listId: ListID, $filters: BoardIssueInput, $isGroup: Boolean = false, $isProject: Boolean = false) {\n  group(fullPath: $fullPath) @include(if: $isGroup) {\n    id\n    board(id: $boardId) {\n      id\n      hideBacklogList\n      lists(issueFilters: $filters, id: $listId) {\n        nodes {\n          ...BoardListFragment\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  project(fullPath: $fullPath) @include(if: $isProject) {\n    id\n    board(id: $boardId) {\n      id\n      hideBacklogList\n      lists(issueFilters: $filters, id: $listId) {\n        nodes {\n          ...BoardListFragment\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment BoardListFragment on BoardList {\n  ...BoardListShared\n  __typename\n}\n\nfragment BoardListShared on BoardList {\n  id\n  title\n  position\n  listType\n  collapsed\n  label {\n    id\n    title\n    color\n    textColor\n    description\n    descriptionHtml\n    __typename\n  }\n  __typename\n}\n","query_analysis.duration_s":0.003546677005942911,"query_analysis.depth":6,"query_analysis.complexity":49,"query_analysis.used_fields":["Group.id","Board.id","Board.hideBacklogList","BoardList.id","BoardList.title","BoardList.position","BoardList.listType","BoardList.collapsed","Label.id","Label.title","Label.color","Label.textColor","Label.description","Label.descriptionHtml","Label.__typename","BoardList.label","BoardList.__typename","BoardListConnection.nodes","BoardListConnection.__typename","Board.lists","Board.__typename","Group.board","Group.__typename","Query.group","Project.id","Project.board","Project.__typename","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:42:05.931Z","correlation_id":"01H2CE3XYSHGPJAJQRKZV5GN04","meta.caller_id":"graphql:BoardListCount","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"BoardListCount/RM8Rbdgcfd8baR2fEknBq_EN0o76KZjHUcywKRoP4BA=/2/eTNeMqjAFZto073BkZ-fSUSObauFk_NJQiqloLp13F8=","duration_s":0.0007287010084837675,"operation_name":"BoardListCount","operation_fingerprint":"BoardListCount/RM8Rbdgcfd8baR2fEknBq_EN0o76KZjHUcywKRoP4BA=","is_mutation":false,"variables":"{\"id\"=\u003e\"gid://gitlab/List/1\", \"filters\"=\u003e{\"not\"=\u003e{}}}","query_string":"query BoardListCount($id: ListID!, $filters: BoardIssueInput) {\n  boardList(id: $id, issueFilters: $filters) {\n    id\n    issuesCount\n    __typename\n  }\n}\n","query_analysis.duration_s":0.0008038020168896765,"query_analysis.depth":2,"query_analysis.complexity":4,"query_analysis.used_fields":["BoardList.id","BoardList.issuesCount","BoardList.__typename","Query.boardList"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:42:05.940Z","correlation_id":"01H2CE3XYJBX69NKFSBH350M99","meta.caller_id":"graphql:BoardListsEE","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"BoardListsEE/yDLviiGNcPiRWj0WK6qzkpjSg17MuPZqq-YvcuwjNzU=/7/ak71jYg5Sc0VhDf_EIDmXWjG1zkKKvVQoagsp38CVx0=","duration_s":0.00045952302752994,"operation_name":"BoardListsEE","operation_fingerprint":"BoardListsEE/yDLviiGNcPiRWj0WK6qzkpjSg17MuPZqq-YvcuwjNzU=","is_mutation":false,"variables":"{\"isGroup\"=\u003efalse, \"isProject\"=\u003etrue, \"fullPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"boardId\"=\u003e\"gid://gitlab/Board/1\", \"id\"=\u003e\"gid://gitlab/List/1\", \"filters\"=\u003e{\"not\"=\u003e{}}, \"first\"=\u003e10}","query_string":"query BoardListsEE($fullPath: ID!, $boardId: BoardID!, $id: ListID, $filters: BoardIssueInput, $isGroup: Boolean = false, $isProject: Boolean = false, $after: String, $first: Int) {\n  group(fullPath: $fullPath) @include(if: $isGroup) {\n    id\n    board(id: $boardId) {\n      id\n      lists(id: $id, issueFilters: $filters) {\n        nodes {\n          id\n          listType\n          issues(first: $first, filters: $filters, after: $after) {\n            nodes {\n              ...Issue\n              __typename\n            }\n            pageInfo {\n              endCursor\n              hasNextPage\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  project(fullPath: $fullPath) @include(if: $isProject) {\n    id\n    board(id: $boardId) {\n      id\n      lists(id: $id, issueFilters: $filters) {\n        nodes {\n          id\n          listType\n          issues(first: $first, filters: $filters, after: $after) {\n            nodes {\n              ...Issue\n              __typename\n            }\n            pageInfo {\n              endCursor\n              hasNextPage\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment Issue on Issue {\n  id\n  ...IssueNode\n  __typename\n}\n\nfragment IssueNode on Issue {\n  id\n  iid\n  title\n  referencePath: reference(full: true)\n  dueDate\n  timeEstimate\n  totalTimeSpent\n  humanTimeEstimate\n  humanTotalTimeSpent\n  emailsDisabled\n  confidential\n  hidden\n  webUrl\n  relativePosition\n  type\n  severity\n  milestone {\n    ...MilestoneFragment\n    __typename\n  }\n  assignees {\n    nodes {\n      ...User\n      __typename\n    }\n    __typename\n  }\n  labels {\n    nodes {\n      id\n      title\n      color\n      description\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment MilestoneFragment on Milestone {\n  expired\n  id\n  state\n  title\n  __typename\n}\n\nfragment User on User {\n  id\n  avatarUrl\n  name\n  username\n  webUrl\n  __typename\n}\n","query_analysis.duration_s":0.007773888006340712,"query_analysis.depth":9,"query_analysis.complexity":132,"query_analysis.used_fields":["Group.id","Board.id","BoardList.id","BoardList.listType","Issue.id","Issue.iid","Issue.title","Issue.reference","Issue.dueDate","Issue.timeEstimate","Issue.totalTimeSpent","Issue.humanTimeEstimate","Issue.humanTotalTimeSpent","Issue.emailsDisabled","Issue.confidential","Issue.hidden","Issue.webUrl","Issue.relativePosition","Issue.type","Issue.severity","Milestone.expired","Milestone.id","Milestone.state","Milestone.title","Milestone.__typename","Issue.milestone","User.id","User.avatarUrl","User.name","User.username","User.webUrl","User.__typename","UserCore.__typename","UserCoreConnection.nodes","UserCoreConnection.__typename","Issue.assignees","Label.id","Label.title","Label.color","Label.description","Label.__typename","LabelConnection.nodes","LabelConnection.__typename","Issue.labels","Issue.__typename","IssueConnection.nodes","PageInfo.endCursor","PageInfo.hasNextPage","PageInfo.__typename","IssueConnection.pageInfo","IssueConnection.__typename","BoardList.issues","BoardList.__typename","BoardListConnection.nodes","BoardListConnection.__typename","Board.lists","Board.__typename","Group.board","Group.__typename","Query.group","Project.id","Project.board","Project.__typename","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:42:05.959Z","correlation_id":"01H2CE3XZKZ866RTDBX7G04W38","meta.caller_id":"graphql:BoardListCount","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"BoardListCount/RM8Rbdgcfd8baR2fEknBq_EN0o76KZjHUcywKRoP4BA=/2/jSGrM2bEL_SrntYTvh4dJ5otZctmrfKyLwkxQ403s3I=","duration_s":0.00137098302366212,"operation_name":"BoardListCount","operation_fingerprint":"BoardListCount/RM8Rbdgcfd8baR2fEknBq_EN0o76KZjHUcywKRoP4BA=","is_mutation":false,"variables":"{\"id\"=\u003e\"gid://gitlab/List/2\", \"filters\"=\u003e{\"not\"=\u003e{}}}","query_string":"query BoardListCount($id: ListID!, $filters: BoardIssueInput) {\n  boardList(id: $id, issueFilters: $filters) {\n    id\n    issuesCount\n    __typename\n  }\n}\n","query_analysis.duration_s":0.0008132339862640947,"query_analysis.depth":2,"query_analysis.complexity":4,"query_analysis.used_fields":["BoardList.id","BoardList.issuesCount","BoardList.__typename","Query.boardList"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:42:05.968Z","correlation_id":"01H2CE3XZFN1RSQNT5E4A937VC","meta.caller_id":"graphql:BoardListsEE","meta.remote_ip":"115.85.71.130","meta.feature_category":"team_planning","meta.user":"kukuhd","meta.user_id":2,"meta.client_id":"user/2","trace_type":"execute_query","query_fingerprint":"BoardListsEE/yDLviiGNcPiRWj0WK6qzkpjSg17MuPZqq-YvcuwjNzU=/7/5ZAxZWV1osbsgZoFjdlMx2YxEm5bT1KhysNfhnp8Msc=","duration_s":0.00040773500222712755,"operation_name":"BoardListsEE","operation_fingerprint":"BoardListsEE/yDLviiGNcPiRWj0WK6qzkpjSg17MuPZqq-YvcuwjNzU=","is_mutation":false,"variables":"{\"isGroup\"=\u003efalse, \"isProject\"=\u003etrue, \"fullPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"boardId\"=\u003e\"gid://gitlab/Board/1\", \"id\"=\u003e\"gid://gitlab/List/2\", \"filters\"=\u003e{\"not\"=\u003e{}}, \"first\"=\u003e10}","query_string":"query BoardListsEE($fullPath: ID!, $boardId: BoardID!, $id: ListID, $filters: BoardIssueInput, $isGroup: Boolean = false, $isProject: Boolean = false, $after: String, $first: Int) {\n  group(fullPath: $fullPath) @include(if: $isGroup) {\n    id\n    board(id: $boardId) {\n      id\n      lists(id: $id, issueFilters: $filters) {\n        nodes {\n          id\n          listType\n          issues(first: $first, filters: $filters, after: $after) {\n            nodes {\n              ...Issue\n              __typename\n            }\n            pageInfo {\n              endCursor\n              hasNextPage\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  project(fullPath: $fullPath) @include(if: $isProject) {\n    id\n    board(id: $boardId) {\n      id\n      lists(id: $id, issueFilters: $filters) {\n        nodes {\n          id\n          listType\n          issues(first: $first, filters: $filters, after: $after) {\n            nodes {\n              ...Issue\n              __typename\n            }\n            pageInfo {\n              endCursor\n              hasNextPage\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment Issue on Issue {\n  id\n  ...IssueNode\n  __typename\n}\n\nfragment IssueNode on Issue {\n  id\n  iid\n  title\n  referencePath: reference(full: true)\n  dueDate\n  timeEstimate\n  totalTimeSpent\n  humanTimeEstimate\n  humanTotalTimeSpent\n  emailsDisabled\n  confidential\n  hidden\n  webUrl\n  relativePosition\n  type\n  severity\n  milestone {\n    ...MilestoneFragment\n    __typename\n  }\n  assignees {\n    nodes {\n      ...User\n      __typename\n    }\n    __typename\n  }\n  labels {\n    nodes {\n      id\n      title\n      color\n      description\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment MilestoneFragment on Milestone {\n  expired\n  id\n  state\n  title\n  __typename\n}\n\nfragment User on User {\n  id\n  avatarUrl\n  name\n  username\n  webUrl\n  __typename\n}\n","query_analysis.duration_s":0.007732112979283556,"query_analysis.depth":9,"query_analysis.complexity":132,"query_analysis.used_fields":["Group.id","Board.id","BoardList.id","BoardList.listType","Issue.id","Issue.iid","Issue.title","Issue.reference","Issue.dueDate","Issue.timeEstimate","Issue.totalTimeSpent","Issue.humanTimeEstimate","Issue.humanTotalTimeSpent","Issue.emailsDisabled","Issue.confidential","Issue.hidden","Issue.webUrl","Issue.relativePosition","Issue.type","Issue.severity","Milestone.expired","Milestone.id","Milestone.state","Milestone.title","Milestone.__typename","Issue.milestone","User.id","User.avatarUrl","User.name","User.username","User.webUrl","User.__typename","UserCore.__typename","UserCoreConnection.nodes","UserCoreConnection.__typename","Issue.assignees","Label.id","Label.title","Label.color","Label.description","Label.__typename","LabelConnection.nodes","LabelConnection.__typename","Issue.labels","Issue.__typename","IssueConnection.nodes","PageInfo.endCursor","PageInfo.hasNextPage","PageInfo.__typename","IssueConnection.pageInfo","IssueConnection.__typename","BoardList.issues","BoardList.__typename","BoardListConnection.nodes","BoardListConnection.__typename","Board.lists","Board.__typename","Group.board","Group.__typename","Query.group","Project.id","Project.board","Project.__typename","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:42:52.743Z","correlation_id":"01H2CE5BNBQ620YKYT1ZQT3P06","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=/3/X8XlCp72xA8ljZoYCI4lBgAMnI5TVEV0q8r6m8OukJE=","duration_s":0.0004835750150959939,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signature {\n              __typename\n              ... on GpgSignature {\n                gpgKeyPrimaryKeyid\n                verificationStatus\n                __typename\n              }\n              ... on X509Signature {\n                verificationStatus\n                x509Certificate {\n                  id\n                  subject\n                  subjectKeyIdentifier\n                  x509Issuer {\n                    id\n                    subject\n                    subjectKeyIdentifier\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SshSignature {\n                verificationStatus\n                keyFingerprintSha256\n                __typename\n              }\n            }\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.0038208419864531606,"query_analysis.depth":10,"query_analysis.complexity":77,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","CommitSignature.__typename","GpgSignature.gpgKeyPrimaryKeyid","GpgSignature.verificationStatus","GpgSignature.__typename","X509Signature.verificationStatus","X509Certificate.id","X509Certificate.subject","X509Certificate.subjectKeyIdentifier","X509Issuer.id","X509Issuer.subject","X509Issuer.subjectKeyIdentifier","X509Issuer.__typename","X509Certificate.x509Issuer","X509Certificate.__typename","X509Signature.x509Certificate","X509Signature.__typename","SshSignature.verificationStatus","SshSignature.keyFingerprintSha256","SshSignature.__typename","Commit.signature","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:42:52.772Z","correlation_id":"01H2CE5BNQ7W54JK470PF27TEP","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/jc6Y0azvqkv9nIsR2FR9C_QZakNBFin2IM-6t0Y6d4A=","duration_s":0.00039241599733941257,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","query_analysis.duration_s":0.0031547760008834302,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:42:52.773Z","correlation_id":"01H2CE5BNQ7W54JK470PF27TEP","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/BTai2WFCw0au7CsVijg27CZ5E46I1Lpj_Jsudhr-zxQ=","duration_s":0.000314544013235718,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.0031547760008834302,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:43:00.788Z","correlation_id":"01H2CE5KGRJ32C46PJQ5N4MT2P","meta.caller_id":"graphql:pathLastCommit","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=/3/X8XlCp72xA8ljZoYCI4lBgAMnI5TVEV0q8r6m8OukJE=","duration_s":0.00041776199941523373,"operation_name":"pathLastCommit","operation_fingerprint":"pathLastCommit/yWZu78-v7bb-7S1axx06b8KQOWEPw-g8iowdLfEOWXk=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"\"}","query_string":"query pathLastCommit($projectPath: ID!, $path: String, $ref: String!) {\n  project(fullPath: $projectPath) {\n    __typename\n    id\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref) {\n        __typename\n        nodes {\n          __typename\n          lastCommit {\n            __typename\n            id\n            sha\n            title\n            titleHtml\n            descriptionHtml\n            message\n            webPath\n            authoredDate\n            authorName\n            authorGravatar\n            author {\n              __typename\n              id\n              name\n              avatarUrl\n              webPath\n            }\n            signature {\n              __typename\n              ... on GpgSignature {\n                gpgKeyPrimaryKeyid\n                verificationStatus\n                __typename\n              }\n              ... on X509Signature {\n                verificationStatus\n                x509Certificate {\n                  id\n                  subject\n                  subjectKeyIdentifier\n                  x509Issuer {\n                    id\n                    subject\n                    subjectKeyIdentifier\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SshSignature {\n                verificationStatus\n                keyFingerprintSha256\n                __typename\n              }\n            }\n            pipelines(ref: $ref, first: 1) {\n              __typename\n              edges {\n                __typename\n                node {\n                  __typename\n                  id\n                  detailedStatus {\n                    __typename\n                    id\n                    detailsPath\n                    icon\n                    tooltip\n                    text\n                    group\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.0041048800048884004,"query_analysis.depth":10,"query_analysis.complexity":77,"query_analysis.used_fields":["Project.__typename","Project.id","Repository.__typename","TreeConnection.__typename","Tree.__typename","Commit.__typename","Commit.id","Commit.sha","Commit.title","Commit.titleHtml","Commit.descriptionHtml","Commit.message","Commit.webPath","Commit.authoredDate","Commit.authorName","Commit.authorGravatar","UserCore.__typename","UserCore.id","UserCore.name","UserCore.avatarUrl","UserCore.webPath","Commit.author","CommitSignature.__typename","GpgSignature.gpgKeyPrimaryKeyid","GpgSignature.verificationStatus","GpgSignature.__typename","X509Signature.verificationStatus","X509Certificate.id","X509Certificate.subject","X509Certificate.subjectKeyIdentifier","X509Issuer.id","X509Issuer.subject","X509Issuer.subjectKeyIdentifier","X509Issuer.__typename","X509Certificate.x509Issuer","X509Certificate.__typename","X509Signature.x509Certificate","X509Signature.__typename","SshSignature.verificationStatus","SshSignature.keyFingerprintSha256","SshSignature.__typename","Commit.signature","PipelineConnection.__typename","PipelineEdge.__typename","Pipeline.__typename","Pipeline.id","DetailedStatus.__typename","DetailedStatus.id","DetailedStatus.detailsPath","DetailedStatus.icon","DetailedStatus.tooltip","DetailedStatus.text","DetailedStatus.group","Pipeline.detailedStatus","PipelineEdge.node","PipelineConnection.edges","Commit.pipelines","Tree.lastCommit","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:43:00.800Z","correlation_id":"01H2CE5KH4T5YCQQMHGKXWDJ1P","meta.caller_id":"graphql:getPermissions","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=/1/jc6Y0azvqkv9nIsR2FR9C_QZakNBFin2IM-6t0Y6d4A=","duration_s":0.0003940079768653959,"operation_name":"getPermissions","operation_fingerprint":"getPermissions/pobGa1BJiZuXZrZu0uBGcJQ__bJl2MwgE5hau04CbQ8=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\"}","query_string":"query getPermissions($projectPath: ID!) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    userPermissions {\n      __typename\n      pushCode\n      forkProject\n      createMergeRequestIn\n    }\n  }\n}\n","query_analysis.duration_s":0.003112933016382158,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
{"severity":"INFO","time":"2023-06-08T02:43:00.801Z","correlation_id":"01H2CE5KH4T5YCQQMHGKXWDJ1P","meta.caller_id":"graphql:getPaginatedTree","meta.remote_ip":"115.85.71.130","meta.feature_category":"projects","meta.user":"root","meta.user_id":1,"meta.client_id":"user/1","trace_type":"execute_query","query_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=/5/BTai2WFCw0au7CsVijg27CZ5E46I1Lpj_Jsudhr-zxQ=","duration_s":0.00029293500119820237,"operation_name":"getPaginatedTree","operation_fingerprint":"getPaginatedTree/YeUMfC7PCrEzxrjrAoYeOfnbhcyDgys272dXorm79Jw=","is_mutation":false,"variables":"{\"projectPath\"=\u003e\"gibox-dev/spitwebnextjs\", \"ref\"=\u003e\"main\", \"path\"=\u003e\"/\", \"nextPageCursor\"=\u003e\"\", \"pageSize\"=\u003e100}","query_string":"fragment TreeEntry on Entry {\n  __typename\n  id\n  sha\n  name\n  flatPath\n  type\n}\n\nquery getPaginatedTree($projectPath: ID!, $path: String, $ref: String!, $nextPageCursor: String) {\n  project(fullPath: $projectPath) {\n    id\n    __typename\n    repository {\n      __typename\n      paginatedTree(path: $path, ref: $ref, after: $nextPageCursor) {\n        __typename\n        pageInfo {\n          __typename\n          endCursor\n          startCursor\n          hasNextPage\n        }\n        nodes {\n          __typename\n          trees {\n            __typename\n            nodes {\n              ...TreeEntry\n              webPath\n              __typename\n            }\n          }\n          submodules {\n            __typename\n            nodes {\n              ...TreeEntry\n              webUrl\n              treeUrl\n              __typename\n            }\n          }\n          blobs {\n            __typename\n            nodes {\n              ...TreeEntry\n              mode\n              webPath\n              lfsOid\n              __typename\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","query_analysis.duration_s":0.003112933016382158,"query_analysis.depth":7,"query_analysis.complexity":51,"query_analysis.used_fields":["Project.id","Project.__typename","Repository.__typename","TreeConnection.__typename","PageInfo.__typename","PageInfo.endCursor","PageInfo.startCursor","PageInfo.hasNextPage","TreeConnection.pageInfo","Tree.__typename","TreeEntryConnection.__typename","Entry.__typename","Entry.id","Entry.sha","Entry.name","Entry.flatPath","Entry.type","TreeEntry.webPath","TreeEntry.__typename","TreeEntryConnection.nodes","Tree.trees","SubmoduleConnection.__typename","Submodule.webUrl","Submodule.treeUrl","Submodule.__typename","SubmoduleConnection.nodes","Tree.submodules","BlobConnection.__typename","Blob.mode","Blob.webPath","Blob.lfsOid","Blob.__typename","BlobConnection.nodes","Tree.blobs","TreeConnection.nodes","Repository.paginatedTree","Project.repository","Query.project"],"query_analysis.used_deprecated_fields":[]}
